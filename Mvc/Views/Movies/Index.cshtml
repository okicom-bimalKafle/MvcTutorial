@model X.PagedList.IPagedList<Mvc.Models.Movie>
@using X.PagedList.Mvc.Core;


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@using (Html.BeginForm("Index", "Movies", FormMethod.Get))
{
    <div class="form-group form-inline">
        Find by name: @Html.TextBox("SearchString",  ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search" })
        <input class="btn btn-primary" type="submit" value="Search" />
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th>
               Title
            </th>
            <th>
               Release Date
            </th>
            <th>
                Genre
            </th>
            <th>
               Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, currentFilter = ViewBag.CurrentFilter }))

